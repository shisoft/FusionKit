// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		1D2010C416E61211006A87B1 /* MainStoryboard.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 1D2010C316E61211006A87B1 /* MainStoryboard.storyboard */; };
		1D2010C616E62DFC006A87B1 /* WFNewsItemViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1D2010C516E62DFC006A87B1 /* WFNewsItemViewController.xib */; };
		1D7CCFC116E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CCFBF16E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CCFC216E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFC016E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.m */; };
		1D7CCFC516E4BFDD00F5F3AF /* FKWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CCFC316E4BFDD00F5F3AF /* FKWrapper.h */; };
		1D7CCFC616E4BFDD00F5F3AF /* FKWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFC416E4BFDD00F5F3AF /* FKWrapper.m */; };
		1D7CCFC916E4C0CB00F5F3AF /* FKConnection.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CCFC716E4C0CA00F5F3AF /* FKConnection.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CCFCA16E4C0CB00F5F3AF /* FKConnection.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFC816E4C0CA00F5F3AF /* FKConnection.m */; };
		1D7CCFD616E4C10E00F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CCFD416E4C10E00F5F3AF /* InfoPlist.strings */; };
		1D7CCFD816E4C10E00F5F3AF /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFD716E4C10E00F5F3AF /* main.m */; };
		1D7CCFDC16E4C10E00F5F3AF /* Credits.rtf in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CCFDA16E4C10E00F5F3AF /* Credits.rtf */; };
		1D7CCFDF16E4C10E00F5F3AF /* WFAppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFDE16E4C10E00F5F3AF /* WFAppDelegate.m */; };
		1D7CCFE216E4C10E00F5F3AF /* MainMenu.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CCFE016E4C10E00F5F3AF /* MainMenu.xib */; };
		1D7CCFE816E4C49000F5F3AF /* WFLoginWindowController.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFE716E4C49000F5F3AF /* WFLoginWindowController.m */; };
		1D7CCFEA16E4C53800F5F3AF /* WFLoginWindowController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CCFE916E4C53800F5F3AF /* WFLoginWindowController.xib */; };
		1D7CCFEB16E4C60600F5F3AF /* FusionKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D85892116D7C5900056DB48 /* FusionKit.framework */; };
		1D7CCFFC16E4D24C00F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CCFFA16E4D24C00F5F3AF /* InfoPlist.strings */; };
		1D7CD00116E4D2A800F5F3AF /* FusionKit.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D85893116D7C5900056DB48 /* FusionKit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD00216E4D2A900F5F3AF /* FKJSONKeyedArchiver.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D85893816D7C77C0056DB48 /* FKJSONKeyedArchiver.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD00316E4D2A900F5F3AF /* FKJSONKeyedUnarchiver.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CCFBF16E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD00416E4D2A900F5F3AF /* FKWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CCFC316E4BFDD00F5F3AF /* FKWrapper.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD00516E4D2A900F5F3AF /* FKConnection.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CCFC716E4C0CA00F5F3AF /* FKConnection.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD00616E4D2BD00F5F3AF /* FKJSONKeyedArchiver.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D85893916D7C77C0056DB48 /* FKJSONKeyedArchiver.m */; };
		1D7CD00716E4D2BD00F5F3AF /* FKJSONKeyedUnarchiver.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFC016E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.m */; };
		1D7CD00816E4D2BD00F5F3AF /* FKWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFC416E4BFDD00F5F3AF /* FKWrapper.m */; };
		1D7CD00916E4D2BD00F5F3AF /* FKConnection.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CCFC816E4C0CA00F5F3AF /* FKConnection.m */; };
		1D7CD01A16E4DBD900F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD01816E4DBD900F5F3AF /* InfoPlist.strings */; };
		1D7CD01C16E4DBD900F5F3AF /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD01B16E4DBD900F5F3AF /* main.m */; };
		1D7CD02016E4DBD900F5F3AF /* WFAppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD01F16E4DBD900F5F3AF /* WFAppDelegate.m */; };
		1D7CD02216E4DBD900F5F3AF /* Default.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD02116E4DBD900F5F3AF /* Default.png */; };
		1D7CD02416E4DBD900F5F3AF /* Default@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD02316E4DBD900F5F3AF /* Default@2x.png */; };
		1D7CD02616E4DBD900F5F3AF /* Default-568h@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD02516E4DBD900F5F3AF /* Default-568h@2x.png */; };
		1D7CD03616E4DC0300F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD03416E4DC0300F5F3AF /* InfoPlist.strings */; };
		1D7CD04D16E4DC3600F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD04B16E4DC3600F5F3AF /* InfoPlist.strings */; };
		1D7CD05816E4DC7500F5F3AF /* NSString+Pinyin.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD05616E4DC7500F5F3AF /* NSString+Pinyin.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD05916E4DC7500F5F3AF /* NSString+Pinyin.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD05716E4DC7500F5F3AF /* NSString+Pinyin.m */; };
		1D7CD05B16E4DC9000F5F3AF /* dict.txt in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD05A16E4DC9000F5F3AF /* dict.txt */; };
		1D7CD05E16E4DCED00F5F3AF /* PYPinyin.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD05C16E4DCED00F5F3AF /* PYPinyin.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD05F16E4DCED00F5F3AF /* PYPinyin.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD05D16E4DCED00F5F3AF /* PYPinyin.m */; };
		1D7CD06016E4DD3500F5F3AF /* PYPinyin.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD05D16E4DCED00F5F3AF /* PYPinyin.m */; };
		1D7CD06116E4DD3500F5F3AF /* NSString+Pinyin.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD05716E4DC7500F5F3AF /* NSString+Pinyin.m */; };
		1D7CD06216E4DD4400F5F3AF /* PinyinKit.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD03816E4DC0300F5F3AF /* PinyinKit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD06316E4DDBC00F5F3AF /* PinyinKit.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD03816E4DC0300F5F3AF /* PinyinKit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD06416E4DDBC00F5F3AF /* PYPinyin.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD05C16E4DCED00F5F3AF /* PYPinyin.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD06516E4DDBC00F5F3AF /* NSString+Pinyin.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD05616E4DC7500F5F3AF /* NSString+Pinyin.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD06A16E4DDF900F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06916E4DDF900F5F3AF /* Foundation.framework */; };
		1D7CD06C16E4DE0F00F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */; };
		1D7CD06E16E4DE3100F5F3AF /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06616E4DDDD00F5F3AF /* Cocoa.framework */; };
		1D7CD07116E4DE3100F5F3AF /* AppKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06F16E4DE3100F5F3AF /* AppKit.framework */; };
		1D7CD07216E4DE3100F5F3AF /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD07016E4DE3100F5F3AF /* CoreGraphics.framework */; };
		1D7CD07316E4DE5E00F5F3AF /* MobileFusionKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CCFF416E4D24C00F5F3AF /* MobileFusionKit.framework */; };
		1D7CD07416E4DE5E00F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */; };
		1D7CD07716E4DE5E00F5F3AF /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD07516E4DE5E00F5F3AF /* CoreGraphics.framework */; };
		1D7CD07816E4DE5E00F5F3AF /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD07616E4DE5E00F5F3AF /* UIKit.framework */; };
		1D7CD07916E4DE8300F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06916E4DDF900F5F3AF /* Foundation.framework */; };
		1D7CD07A16E4DE8500F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */; };
		1D7CD07B16E4DE9900F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06916E4DDF900F5F3AF /* Foundation.framework */; };
		1D7CD07C16E4DEBA00F5F3AF /* dict.txt in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD05A16E4DC9000F5F3AF /* dict.txt */; };
		1D7CD07D16E4DF0200F5F3AF /* MobilePinyinKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD04616E4DC3600F5F3AF /* MobilePinyinKit.framework */; };
		1D7CD07E16E4DFA000F5F3AF /* FKDecls.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD00A16E4DB0D00F5F3AF /* FKDecls.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD07F16E4DFA000F5F3AF /* FKDecls.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD00A16E4DB0D00F5F3AF /* FKDecls.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD09316E4E21000F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD09116E4E21000F5F3AF /* InfoPlist.strings */; };
		1D7CD0AB16E4E21F00F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD0A916E4E21F00F5F3AF /* InfoPlist.strings */; };
		1D7CD0B816E4E2BB00F5F3AF /* base64.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0B416E4E27400F5F3AF /* base64.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0B916E4E2C200F5F3AF /* NSBase64DataEncoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0B016E4E25F00F5F3AF /* NSBase64DataEncoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0BA16E4E2C500F5F3AF /* NSBase64DataEncoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0B016E4E25F00F5F3AF /* NSBase64DataEncoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0BB16E4E2C900F5F3AF /* base64.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0B416E4E27400F5F3AF /* base64.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0BC16E4E2CE00F5F3AF /* Base64Kit.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD09516E4E21000F5F3AF /* Base64Kit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0BD16E4E2CF00F5F3AF /* Base64Kit.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD09516E4E21000F5F3AF /* Base64Kit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0BE16E4E4BB00F5F3AF /* MobileBase64Kit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD0A316E4E21F00F5F3AF /* MobileBase64Kit.framework */; };
		1D7CD0BF16E4E4C300F5F3AF /* Base64Kit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD08716E4E21000F5F3AF /* Base64Kit.framework */; };
		1D7CD0C016E4E4C300F5F3AF /* PinyinKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD02F16E4DC0300F5F3AF /* PinyinKit.framework */; };
		1D7CD0D016E4E67C00F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD0CE16E4E67C00F5F3AF /* InfoPlist.strings */; };
		1D7CD0E416E4E69100F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD0E216E4E69100F5F3AF /* InfoPlist.strings */; };
		1D7CD0EE16E4E6C100F5F3AF /* TaskCounter.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0E916E4E6C100F5F3AF /* TaskCounter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0EF16E4E6C100F5F3AF /* TCTaskCounter.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0EA16E4E6C100F5F3AF /* TCTaskCounter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0F016E4E6C100F5F3AF /* TCTaskCounter.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0EB16E4E6C100F5F3AF /* TCTaskCounter.m */; };
		1D7CD0F116E4E6C100F5F3AF /* TCTaskQueue.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0EC16E4E6C100F5F3AF /* TCTaskQueue.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD0F216E4E6C100F5F3AF /* TCTaskQueue.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0ED16E4E6C100F5F3AF /* TCTaskQueue.m */; };
		1D7CD0F316E4E73200F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */; };
		1D7CD0F416E4E73200F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */; };
		1D7CD0F516E4E73700F5F3AF /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD07616E4DE5E00F5F3AF /* UIKit.framework */; };
		1D7CD0F616E4E73A00F5F3AF /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD07516E4DE5E00F5F3AF /* CoreGraphics.framework */; };
		1D7CD0F716E4E74100F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06916E4DDF900F5F3AF /* Foundation.framework */; };
		1D7CD0FA16E4E77D00F5F3AF /* CoreFoundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD0F816E4E77D00F5F3AF /* CoreFoundation.framework */; };
		1D7CD0FB16E4E77D00F5F3AF /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD0F916E4E77D00F5F3AF /* Security.framework */; };
		1D7CD0FC16E4E78900F5F3AF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */; };
		1D7CD0FF16E4E7C500F5F3AF /* KeychainItemWrapper.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD0FD16E4E7C500F5F3AF /* KeychainItemWrapper.h */; };
		1D7CD10016E4E7C500F5F3AF /* KeychainItemWrapper.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0FE16E4E7C500F5F3AF /* KeychainItemWrapper.m */; };
		1D7CD10116E4EBAA00F5F3AF /* NSBase64DataEncoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0B116E4E25F00F5F3AF /* NSBase64DataEncoder.m */; };
		1D7CD10216E4EBAA00F5F3AF /* NSBase64DataEncoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0B116E4E25F00F5F3AF /* NSBase64DataEncoder.m */; };
		1D7CD10316E4EBAE00F5F3AF /* base64.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0B516E4E27400F5F3AF /* base64.m */; };
		1D7CD10416E4EBAF00F5F3AF /* base64.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD0B516E4E27400F5F3AF /* base64.m */; };
		1D7CD10616E4EDA600F5F3AF /* FusionKit.framework in CopyFiles */ = {isa = PBXBuildFile; fileRef = 1D85892116D7C5900056DB48 /* FusionKit.framework */; };
		1D7CD10716E4EDA600F5F3AF /* PinyinKit.framework in CopyFiles */ = {isa = PBXBuildFile; fileRef = 1D7CD02F16E4DC0300F5F3AF /* PinyinKit.framework */; };
		1D7CD10816E4EDA600F5F3AF /* Base64Kit.framework in CopyFiles */ = {isa = PBXBuildFile; fileRef = 1D7CD08716E4E21000F5F3AF /* Base64Kit.framework */; };
		1D7CD11916E50B3100F5F3AF /* WFMainWindowController.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD11416E50B0F00F5F3AF /* WFMainWindowController.m */; };
		1D7CD11A16E50B3100F5F3AF /* WFMainWindowController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD11516E50B0F00F5F3AF /* WFMainWindowController.xib */; };
		1D7CD12416E517CF00F5F3AF /* WFAppPaneController.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD12116E517BE00F5F3AF /* WFAppPaneController.m */; };
		1D7CD13316E5247500F5F3AF /* Camera.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12516E5247500F5F3AF /* Camera.png */; };
		1D7CD13416E5247500F5F3AF /* Camera@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12616E5247500F5F3AF /* Camera@2x.png */; };
		1D7CD13516E5247500F5F3AF /* Contacts.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12716E5247500F5F3AF /* Contacts.png */; };
		1D7CD13616E5247500F5F3AF /* Contacts@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12816E5247500F5F3AF /* Contacts@2x.png */; };
		1D7CD13716E5247500F5F3AF /* Groove.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12916E5247500F5F3AF /* Groove.png */; };
		1D7CD13816E5247500F5F3AF /* Groove@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12A16E5247500F5F3AF /* Groove@2x.png */; };
		1D7CD13916E5247500F5F3AF /* Me.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12B16E5247500F5F3AF /* Me.png */; };
		1D7CD13A16E5247500F5F3AF /* Me@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12C16E5247500F5F3AF /* Me@2x.png */; };
		1D7CD13B16E5247500F5F3AF /* News.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12D16E5247500F5F3AF /* News.png */; };
		1D7CD13C16E5247500F5F3AF /* News@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12E16E5247500F5F3AF /* News@2x.png */; };
		1D7CD13D16E5247500F5F3AF /* Places.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD12F16E5247500F5F3AF /* Places.png */; };
		1D7CD13E16E5247500F5F3AF /* Places@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD13016E5247500F5F3AF /* Places@2x.png */; };
		1D7CD13F16E5247500F5F3AF /* Posts.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD13116E5247500F5F3AF /* Posts.png */; };
		1D7CD14016E5247500F5F3AF /* Posts@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD13216E5247500F5F3AF /* Posts@2x.png */; };
		1D7CD15B16E535C100F5F3AF /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D7CD15A16E535C100F5F3AF /* Cocoa.framework */; };
		1D7CD16516E535C100F5F3AF /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD16316E535C100F5F3AF /* InfoPlist.strings */; };
		1D7CD17016E5362700F5F3AF /* FusionKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D85892116D7C5900056DB48 /* FusionKit.framework */; };
		1D7CD17816E53FA400F5F3AF /* README.md in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD17716E53FA300F5F3AF /* README.md */; };
		1D7CD17916E5451200F5F3AF /* FKNews.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD16D16E535E300F5F3AF /* FKNews.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD17A16E5451200F5F3AF /* FKNews.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD16E16E535E300F5F3AF /* FKNews.m */; };
		1D7CD17B16E5451200F5F3AF /* FKContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD17416E53CD300F5F3AF /* FKContact.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD17C16E5451200F5F3AF /* FKContact.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD17516E53CD300F5F3AF /* FKContact.m */; };
		1D7CD17D16E5451300F5F3AF /* FKNews.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD16D16E535E300F5F3AF /* FKNews.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD17E16E5451300F5F3AF /* FKNews.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD16E16E535E300F5F3AF /* FKNews.m */; };
		1D7CD17F16E5451300F5F3AF /* FKContact.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD17416E53CD300F5F3AF /* FKContact.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD18016E5451300F5F3AF /* FKContact.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD17516E53CD300F5F3AF /* FKContact.m */; };
		1D7CD18616E5564A00F5F3AF /* NSString+Geometrics.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD18516E5564A00F5F3AF /* NSString+Geometrics.m */; };
		1D7CD18716E556CF00F5F3AF /* FKMedia.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD18116E54A7400F5F3AF /* FKMedia.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD18816E556D200F5F3AF /* FKMedia.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD18116E54A7400F5F3AF /* FKMedia.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD18916E556D900F5F3AF /* FKMedia.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD18216E54A7500F5F3AF /* FKMedia.m */; };
		1D7CD18A16E556DB00F5F3AF /* FKMedia.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD18216E54A7500F5F3AF /* FKMedia.m */; };
		1D7CD18E16E55F7D00F5F3AF /* WFNewsViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD18C16E55F7B00F5F3AF /* WFNewsViewController.m */; };
		1D7CD18F16E55F7D00F5F3AF /* WFNewsViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1D7CD18D16E55F7C00F5F3AF /* WFNewsViewController.xib */; };
		1D7CD19016E563C800F5F3AF /* FusionBinding.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D7CD16716E535C200F5F3AF /* FusionBinding.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D7CD19616E5768900F5F3AF /* WFNewsItemViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D7CD19516E5768900F5F3AF /* WFNewsItemViewController.m */; };
		1D85892F16D7C5900056DB48 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D85892D16D7C5900056DB48 /* InfoPlist.strings */; };
		1D85893716D7C5AC0056DB48 /* FusionKit.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D85893116D7C5900056DB48 /* FusionKit.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D85893A16D7C77C0056DB48 /* FKJSONKeyedArchiver.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D85893816D7C77C0056DB48 /* FKJSONKeyedArchiver.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D85893B16D7C77C0056DB48 /* FKJSONKeyedArchiver.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D85893916D7C77C0056DB48 /* FKJSONKeyedArchiver.m */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		1D7CD10516E4ED9000F5F3AF /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
				1D7CD10616E4EDA600F5F3AF /* FusionKit.framework in CopyFiles */,
				1D7CD10716E4EDA600F5F3AF /* PinyinKit.framework in CopyFiles */,
				1D7CD10816E4EDA600F5F3AF /* Base64Kit.framework in CopyFiles */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		1D2010C316E61211006A87B1 /* MainStoryboard.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; path = MainStoryboard.storyboard; sourceTree = "<group>"; };
		1D2010C516E62DFC006A87B1 /* WFNewsItemViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = WFNewsItemViewController.xib; sourceTree = "<group>"; };
		1D7CCFBF16E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKJSONKeyedUnarchiver.h; sourceTree = "<group>"; };
		1D7CCFC016E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKJSONKeyedUnarchiver.m; sourceTree = "<group>"; };
		1D7CCFC316E4BFDD00F5F3AF /* FKWrapper.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKWrapper.h; sourceTree = "<group>"; };
		1D7CCFC416E4BFDD00F5F3AF /* FKWrapper.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKWrapper.m; sourceTree = "<group>"; };
		1D7CCFC716E4C0CA00F5F3AF /* FKConnection.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKConnection.h; sourceTree = "<group>"; };
		1D7CCFC816E4C0CA00F5F3AF /* FKConnection.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKConnection.m; sourceTree = "<group>"; };
		1D7CCFCF16E4C10D00F5F3AF /* WebFusion.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = WebFusion.app; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CCFD316E4C10E00F5F3AF /* WebFusion-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "WebFusion-Info.plist"; sourceTree = "<group>"; };
		1D7CCFD516E4C10E00F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CCFD716E4C10E00F5F3AF /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
		1D7CCFD916E4C10E00F5F3AF /* WebFusion-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "WebFusion-Prefix.pch"; sourceTree = "<group>"; };
		1D7CCFDB16E4C10E00F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.rtf; name = en; path = en.lproj/Credits.rtf; sourceTree = "<group>"; };
		1D7CCFDD16E4C10E00F5F3AF /* WFAppDelegate.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = WFAppDelegate.h; sourceTree = "<group>"; };
		1D7CCFDE16E4C10E00F5F3AF /* WFAppDelegate.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = WFAppDelegate.m; sourceTree = "<group>"; };
		1D7CCFE116E4C10E00F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = en; path = en.lproj/MainMenu.xib; sourceTree = "<group>"; };
		1D7CCFE616E4C49000F5F3AF /* WFLoginWindowController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = WFLoginWindowController.h; sourceTree = "<group>"; };
		1D7CCFE716E4C49000F5F3AF /* WFLoginWindowController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = WFLoginWindowController.m; sourceTree = "<group>"; };
		1D7CCFE916E4C53800F5F3AF /* WFLoginWindowController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = WFLoginWindowController.xib; sourceTree = "<group>"; };
		1D7CCFF416E4D24C00F5F3AF /* MobileFusionKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = MobileFusionKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CCFF916E4D24C00F5F3AF /* MobileFUsionKit-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MobileFUsionKit-Info.plist"; sourceTree = "<group>"; };
		1D7CCFFB16E4D24C00F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CCFFD16E4D24C00F5F3AF /* MobileFUsionKit-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MobileFUsionKit-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD00A16E4DB0D00F5F3AF /* FKDecls.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FKDecls.h; sourceTree = "<group>"; };
		1D7CD00F16E4DBD900F5F3AF /* MobileWebFusion.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = MobileWebFusion.app; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD01716E4DBD900F5F3AF /* MobileWebFusion-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MobileWebFusion-Info.plist"; sourceTree = "<group>"; };
		1D7CD01916E4DBD900F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD01B16E4DBD900F5F3AF /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
		1D7CD01D16E4DBD900F5F3AF /* MobileWebFusion-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MobileWebFusion-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD01E16E4DBD900F5F3AF /* WFAppDelegate.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = WFAppDelegate.h; sourceTree = "<group>"; };
		1D7CD01F16E4DBD900F5F3AF /* WFAppDelegate.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = WFAppDelegate.m; sourceTree = "<group>"; };
		1D7CD02116E4DBD900F5F3AF /* Default.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Default.png; sourceTree = "<group>"; };
		1D7CD02316E4DBD900F5F3AF /* Default@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Default@2x.png"; sourceTree = "<group>"; };
		1D7CD02516E4DBD900F5F3AF /* Default-568h@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Default-568h@2x.png"; sourceTree = "<group>"; };
		1D7CD02F16E4DC0300F5F3AF /* PinyinKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = PinyinKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD03316E4DC0300F5F3AF /* PinyinKit-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "PinyinKit-Info.plist"; sourceTree = "<group>"; };
		1D7CD03516E4DC0300F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD03716E4DC0300F5F3AF /* PinyinKit-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "PinyinKit-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD03816E4DC0300F5F3AF /* PinyinKit.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = PinyinKit.h; sourceTree = "<group>"; };
		1D7CD04616E4DC3600F5F3AF /* MobilePinyinKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = MobilePinyinKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD04A16E4DC3600F5F3AF /* MobilePinyinKit-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MobilePinyinKit-Info.plist"; sourceTree = "<group>"; };
		1D7CD04C16E4DC3600F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD04E16E4DC3600F5F3AF /* MobilePinyinKit-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MobilePinyinKit-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD05616E4DC7500F5F3AF /* NSString+Pinyin.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSString+Pinyin.h"; sourceTree = "<group>"; };
		1D7CD05716E4DC7500F5F3AF /* NSString+Pinyin.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSString+Pinyin.m"; sourceTree = "<group>"; };
		1D7CD05A16E4DC9000F5F3AF /* dict.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = dict.txt; sourceTree = "<group>"; };
		1D7CD05C16E4DCED00F5F3AF /* PYPinyin.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PYPinyin.h; sourceTree = "<group>"; };
		1D7CD05D16E4DCED00F5F3AF /* PYPinyin.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = PYPinyin.m; sourceTree = "<group>"; };
		1D7CD06616E4DDDD00F5F3AF /* Cocoa.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/System/Library/Frameworks/Cocoa.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD06916E4DDF900F5F3AF /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/System/Library/Frameworks/Foundation.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.1.sdk/System/Library/Frameworks/Foundation.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD06F16E4DE3100F5F3AF /* AppKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AppKit.framework; path = Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/System/Library/Frameworks/AppKit.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD07016E4DE3100F5F3AF /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/System/Library/Frameworks/CoreGraphics.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD07516E4DE5E00F5F3AF /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.1.sdk/System/Library/Frameworks/CoreGraphics.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD07616E4DE5E00F5F3AF /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.1.sdk/System/Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD08716E4E21000F5F3AF /* Base64Kit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Base64Kit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD09016E4E21000F5F3AF /* Base64Kit-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "Base64Kit-Info.plist"; sourceTree = "<group>"; };
		1D7CD09216E4E21000F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD09416E4E21000F5F3AF /* Base64Kit-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Base64Kit-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD09516E4E21000F5F3AF /* Base64Kit.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = Base64Kit.h; sourceTree = "<group>"; };
		1D7CD0A316E4E21F00F5F3AF /* MobileBase64Kit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = MobileBase64Kit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD0A816E4E21F00F5F3AF /* MobileBase64Kit-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MobileBase64Kit-Info.plist"; sourceTree = "<group>"; };
		1D7CD0AA16E4E21F00F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD0AC16E4E21F00F5F3AF /* MobileBase64Kit-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MobileBase64Kit-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD0B016E4E25F00F5F3AF /* NSBase64DataEncoder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NSBase64DataEncoder.h; sourceTree = "<group>"; };
		1D7CD0B116E4E25F00F5F3AF /* NSBase64DataEncoder.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NSBase64DataEncoder.m; sourceTree = "<group>"; };
		1D7CD0B416E4E27400F5F3AF /* base64.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = base64.h; sourceTree = "<group>"; };
		1D7CD0B516E4E27400F5F3AF /* base64.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = base64.m; sourceTree = "<group>"; };
		1D7CD0C916E4E67B00F5F3AF /* MobileTaskCounter.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = MobileTaskCounter.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD0CD16E4E67C00F5F3AF /* MobileTaskCounter-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MobileTaskCounter-Info.plist"; sourceTree = "<group>"; };
		1D7CD0CF16E4E67C00F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD0D116E4E67C00F5F3AF /* MobileTaskCounter-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MobileTaskCounter-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD0DD16E4E69100F5F3AF /* MobileKeychainAccess.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = MobileKeychainAccess.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD0E116E4E69100F5F3AF /* MobileKeychainAccess-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MobileKeychainAccess-Info.plist"; sourceTree = "<group>"; };
		1D7CD0E316E4E69100F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD0E516E4E69100F5F3AF /* MobileKeychainAccess-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MobileKeychainAccess-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD0E916E4E6C100F5F3AF /* TaskCounter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TaskCounter.h; sourceTree = "<group>"; };
		1D7CD0EA16E4E6C100F5F3AF /* TCTaskCounter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TCTaskCounter.h; sourceTree = "<group>"; };
		1D7CD0EB16E4E6C100F5F3AF /* TCTaskCounter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = TCTaskCounter.m; sourceTree = "<group>"; };
		1D7CD0EC16E4E6C100F5F3AF /* TCTaskQueue.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TCTaskQueue.h; sourceTree = "<group>"; };
		1D7CD0ED16E4E6C100F5F3AF /* TCTaskQueue.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = TCTaskQueue.m; sourceTree = "<group>"; };
		1D7CD0F816E4E77D00F5F3AF /* CoreFoundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreFoundation.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.1.sdk/System/Library/Frameworks/CoreFoundation.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD0F916E4E77D00F5F3AF /* Security.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Security.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.1.sdk/System/Library/Frameworks/Security.framework; sourceTree = DEVELOPER_DIR; };
		1D7CD0FD16E4E7C500F5F3AF /* KeychainItemWrapper.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KeychainItemWrapper.h; sourceTree = "<group>"; };
		1D7CD0FE16E4E7C500F5F3AF /* KeychainItemWrapper.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KeychainItemWrapper.m; sourceTree = "<group>"; };
		1D7CD11316E50B0F00F5F3AF /* WFMainWindowController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = WFMainWindowController.h; sourceTree = "<group>"; };
		1D7CD11416E50B0F00F5F3AF /* WFMainWindowController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = WFMainWindowController.m; sourceTree = "<group>"; };
		1D7CD11516E50B0F00F5F3AF /* WFMainWindowController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = WFMainWindowController.xib; sourceTree = "<group>"; };
		1D7CD12016E517BE00F5F3AF /* WFAppPaneController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = WFAppPaneController.h; sourceTree = "<group>"; };
		1D7CD12116E517BE00F5F3AF /* WFAppPaneController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = WFAppPaneController.m; sourceTree = "<group>"; };
		1D7CD12516E5247500F5F3AF /* Camera.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Camera.png; sourceTree = "<group>"; };
		1D7CD12616E5247500F5F3AF /* Camera@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Camera@2x.png"; sourceTree = "<group>"; };
		1D7CD12716E5247500F5F3AF /* Contacts.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Contacts.png; sourceTree = "<group>"; };
		1D7CD12816E5247500F5F3AF /* Contacts@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Contacts@2x.png"; sourceTree = "<group>"; };
		1D7CD12916E5247500F5F3AF /* Groove.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Groove.png; sourceTree = "<group>"; };
		1D7CD12A16E5247500F5F3AF /* Groove@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Groove@2x.png"; sourceTree = "<group>"; };
		1D7CD12B16E5247500F5F3AF /* Me.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Me.png; sourceTree = "<group>"; };
		1D7CD12C16E5247500F5F3AF /* Me@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Me@2x.png"; sourceTree = "<group>"; };
		1D7CD12D16E5247500F5F3AF /* News.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = News.png; sourceTree = "<group>"; };
		1D7CD12E16E5247500F5F3AF /* News@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "News@2x.png"; sourceTree = "<group>"; };
		1D7CD12F16E5247500F5F3AF /* Places.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Places.png; sourceTree = "<group>"; };
		1D7CD13016E5247500F5F3AF /* Places@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Places@2x.png"; sourceTree = "<group>"; };
		1D7CD13116E5247500F5F3AF /* Posts.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Posts.png; sourceTree = "<group>"; };
		1D7CD13216E5247500F5F3AF /* Posts@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Posts@2x.png"; sourceTree = "<group>"; };
		1D7CD14116E52AF500F5F3AF /* COPYRIGHT.md */ = {isa = PBXFileReference; lastKnownFileType = text; path = COPYRIGHT.md; sourceTree = "<group>"; };
		1D7CD15916E535C100F5F3AF /* FusionBinding.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = FusionBinding.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D7CD15A16E535C100F5F3AF /* Cocoa.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = System/Library/Frameworks/Cocoa.framework; sourceTree = SDKROOT; };
		1D7CD15D16E535C100F5F3AF /* AppKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AppKit.framework; path = System/Library/Frameworks/AppKit.framework; sourceTree = SDKROOT; };
		1D7CD15E16E535C100F5F3AF /* CoreData.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreData.framework; path = System/Library/Frameworks/CoreData.framework; sourceTree = SDKROOT; };
		1D7CD15F16E535C100F5F3AF /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		1D7CD16216E535C100F5F3AF /* FusionBinding-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "FusionBinding-Info.plist"; sourceTree = "<group>"; };
		1D7CD16416E535C100F5F3AF /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D7CD16616E535C100F5F3AF /* FusionBinding-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "FusionBinding-Prefix.pch"; sourceTree = "<group>"; };
		1D7CD16716E535C200F5F3AF /* FusionBinding.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FusionBinding.h; sourceTree = "<group>"; };
		1D7CD16D16E535E300F5F3AF /* FKNews.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKNews.h; sourceTree = "<group>"; };
		1D7CD16E16E535E300F5F3AF /* FKNews.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKNews.m; sourceTree = "<group>"; };
		1D7CD17416E53CD300F5F3AF /* FKContact.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKContact.h; sourceTree = "<group>"; };
		1D7CD17516E53CD300F5F3AF /* FKContact.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKContact.m; sourceTree = "<group>"; };
		1D7CD17716E53FA300F5F3AF /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = README.md; sourceTree = "<group>"; };
		1D7CD18116E54A7400F5F3AF /* FKMedia.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKMedia.h; sourceTree = "<group>"; };
		1D7CD18216E54A7500F5F3AF /* FKMedia.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKMedia.m; sourceTree = "<group>"; };
		1D7CD18416E5564900F5F3AF /* NSString+Geometrics.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSString+Geometrics.h"; sourceTree = "<group>"; };
		1D7CD18516E5564A00F5F3AF /* NSString+Geometrics.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSString+Geometrics.m"; sourceTree = "<group>"; };
		1D7CD18B16E55F7B00F5F3AF /* WFNewsViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = WFNewsViewController.h; sourceTree = "<group>"; };
		1D7CD18C16E55F7B00F5F3AF /* WFNewsViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = WFNewsViewController.m; sourceTree = "<group>"; };
		1D7CD18D16E55F7C00F5F3AF /* WFNewsViewController.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = WFNewsViewController.xib; sourceTree = "<group>"; };
		1D7CD19416E5768900F5F3AF /* WFNewsItemViewController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = WFNewsItemViewController.h; sourceTree = "<group>"; };
		1D7CD19516E5768900F5F3AF /* WFNewsItemViewController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = WFNewsItemViewController.m; sourceTree = "<group>"; };
		1D85892116D7C5900056DB48 /* FusionKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = FusionKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D85892C16D7C5900056DB48 /* FusionKit-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "FusionKit-Info.plist"; sourceTree = "<group>"; };
		1D85892E16D7C5900056DB48 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D85893016D7C5900056DB48 /* FusionKit-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "FusionKit-Prefix.pch"; sourceTree = "<group>"; };
		1D85893116D7C5900056DB48 /* FusionKit.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = FusionKit.h; sourceTree = "<group>"; };
		1D85893816D7C77C0056DB48 /* FKJSONKeyedArchiver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FKJSONKeyedArchiver.h; sourceTree = "<group>"; };
		1D85893916D7C77C0056DB48 /* FKJSONKeyedArchiver.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FKJSONKeyedArchiver.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		1D7CCFCC16E4C10D00F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0BF16E4E4C300F5F3AF /* Base64Kit.framework in Frameworks */,
				1D7CD0C016E4E4C300F5F3AF /* PinyinKit.framework in Frameworks */,
				1D7CD07116E4DE3100F5F3AF /* AppKit.framework in Frameworks */,
				1D7CD07216E4DE3100F5F3AF /* CoreGraphics.framework in Frameworks */,
				1D7CD06E16E4DE3100F5F3AF /* Cocoa.framework in Frameworks */,
				1D7CCFEB16E4C60600F5F3AF /* FusionKit.framework in Frameworks */,
				1D7CD07B16E4DE9900F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CCFEE16E4D24C00F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD06C16E4DE0F00F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD00C16E4DBD900F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0BE16E4E4BB00F5F3AF /* MobileBase64Kit.framework in Frameworks */,
				1D7CD07D16E4DF0200F5F3AF /* MobilePinyinKit.framework in Frameworks */,
				1D7CD07716E4DE5E00F5F3AF /* CoreGraphics.framework in Frameworks */,
				1D7CD07816E4DE5E00F5F3AF /* UIKit.framework in Frameworks */,
				1D7CD07316E4DE5E00F5F3AF /* MobileFusionKit.framework in Frameworks */,
				1D7CD07416E4DE5E00F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD02B16E4DC0300F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD07916E4DE8300F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD04016E4DC3600F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD07A16E4DE8500F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD08316E4E21000F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0F716E4E74100F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD09D16E4E21F00F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0F316E4E73200F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0C316E4E67B00F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0F416E4E73200F5F3AF /* Foundation.framework in Frameworks */,
				1D7CD0F516E4E73700F5F3AF /* UIKit.framework in Frameworks */,
				1D7CD0F616E4E73A00F5F3AF /* CoreGraphics.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0D716E4E69100F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0FA16E4E77D00F5F3AF /* CoreFoundation.framework in Frameworks */,
				1D7CD0FB16E4E77D00F5F3AF /* Security.framework in Frameworks */,
				1D7CD0FC16E4E78900F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD15516E535C100F5F3AF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD17016E5362700F5F3AF /* FusionKit.framework in Frameworks */,
				1D7CD15B16E535C100F5F3AF /* Cocoa.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D85891D16D7C5900056DB48 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD06A16E4DDF900F5F3AF /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		1D7CCFD116E4C10D00F5F3AF /* WebFusion */ = {
			isa = PBXGroup;
			children = (
				1D7CCFDD16E4C10E00F5F3AF /* WFAppDelegate.h */,
				1D7CCFDE16E4C10E00F5F3AF /* WFAppDelegate.m */,
				1D7CCFE016E4C10E00F5F3AF /* MainMenu.xib */,
				1D7CCFE616E4C49000F5F3AF /* WFLoginWindowController.h */,
				1D7CCFE716E4C49000F5F3AF /* WFLoginWindowController.m */,
				1D7CCFE916E4C53800F5F3AF /* WFLoginWindowController.xib */,
				1D7CD11316E50B0F00F5F3AF /* WFMainWindowController.h */,
				1D7CD11416E50B0F00F5F3AF /* WFMainWindowController.m */,
				1D7CD11516E50B0F00F5F3AF /* WFMainWindowController.xib */,
				1D7CD12016E517BE00F5F3AF /* WFAppPaneController.h */,
				1D7CD12116E517BE00F5F3AF /* WFAppPaneController.m */,
				1D7CD18B16E55F7B00F5F3AF /* WFNewsViewController.h */,
				1D7CD18C16E55F7B00F5F3AF /* WFNewsViewController.m */,
				1D7CD18D16E55F7C00F5F3AF /* WFNewsViewController.xib */,
				1D7CD19416E5768900F5F3AF /* WFNewsItemViewController.h */,
				1D7CD19516E5768900F5F3AF /* WFNewsItemViewController.m */,
				1D2010C516E62DFC006A87B1 /* WFNewsItemViewController.xib */,
				1D7CD18416E5564900F5F3AF /* NSString+Geometrics.h */,
				1D7CD18516E5564A00F5F3AF /* NSString+Geometrics.m */,
				1D7CCFD216E4C10E00F5F3AF /* Supporting Files */,
			);
			path = WebFusion;
			sourceTree = "<group>";
		};
		1D7CCFD216E4C10E00F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD12516E5247500F5F3AF /* Camera.png */,
				1D7CD12616E5247500F5F3AF /* Camera@2x.png */,
				1D7CD12716E5247500F5F3AF /* Contacts.png */,
				1D7CD12816E5247500F5F3AF /* Contacts@2x.png */,
				1D7CD12916E5247500F5F3AF /* Groove.png */,
				1D7CD12A16E5247500F5F3AF /* Groove@2x.png */,
				1D7CD12B16E5247500F5F3AF /* Me.png */,
				1D7CD12C16E5247500F5F3AF /* Me@2x.png */,
				1D7CD12D16E5247500F5F3AF /* News.png */,
				1D7CD12E16E5247500F5F3AF /* News@2x.png */,
				1D7CD12F16E5247500F5F3AF /* Places.png */,
				1D7CD13016E5247500F5F3AF /* Places@2x.png */,
				1D7CD13116E5247500F5F3AF /* Posts.png */,
				1D7CD13216E5247500F5F3AF /* Posts@2x.png */,
				1D7CCFD316E4C10E00F5F3AF /* WebFusion-Info.plist */,
				1D7CCFD416E4C10E00F5F3AF /* InfoPlist.strings */,
				1D7CCFD716E4C10E00F5F3AF /* main.m */,
				1D7CCFD916E4C10E00F5F3AF /* WebFusion-Prefix.pch */,
				1D7CCFDA16E4C10E00F5F3AF /* Credits.rtf */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CCFF716E4D24C00F5F3AF /* MobileFusionKit */ = {
			isa = PBXGroup;
			children = (
				1D7CCFF816E4D24C00F5F3AF /* Supporting Files */,
			);
			path = MobileFusionKit;
			sourceTree = "<group>";
		};
		1D7CCFF816E4D24C00F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CCFF916E4D24C00F5F3AF /* MobileFUsionKit-Info.plist */,
				1D7CCFFA16E4D24C00F5F3AF /* InfoPlist.strings */,
				1D7CCFFD16E4D24C00F5F3AF /* MobileFUsionKit-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD01516E4DBD900F5F3AF /* MobileWebFusion */ = {
			isa = PBXGroup;
			children = (
				1D7CD01E16E4DBD900F5F3AF /* WFAppDelegate.h */,
				1D7CD01F16E4DBD900F5F3AF /* WFAppDelegate.m */,
				1D2010C316E61211006A87B1 /* MainStoryboard.storyboard */,
				1D7CD01616E4DBD900F5F3AF /* Supporting Files */,
			);
			path = MobileWebFusion;
			sourceTree = "<group>";
		};
		1D7CD01616E4DBD900F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD01716E4DBD900F5F3AF /* MobileWebFusion-Info.plist */,
				1D7CD01816E4DBD900F5F3AF /* InfoPlist.strings */,
				1D7CD01B16E4DBD900F5F3AF /* main.m */,
				1D7CD01D16E4DBD900F5F3AF /* MobileWebFusion-Prefix.pch */,
				1D7CD02116E4DBD900F5F3AF /* Default.png */,
				1D7CD02316E4DBD900F5F3AF /* Default@2x.png */,
				1D7CD02516E4DBD900F5F3AF /* Default-568h@2x.png */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD03116E4DC0300F5F3AF /* PinyinKit */ = {
			isa = PBXGroup;
			children = (
				1D7CD03816E4DC0300F5F3AF /* PinyinKit.h */,
				1D7CD05C16E4DCED00F5F3AF /* PYPinyin.h */,
				1D7CD05D16E4DCED00F5F3AF /* PYPinyin.m */,
				1D7CD05616E4DC7500F5F3AF /* NSString+Pinyin.h */,
				1D7CD05716E4DC7500F5F3AF /* NSString+Pinyin.m */,
				1D7CD05A16E4DC9000F5F3AF /* dict.txt */,
				1D7CD03216E4DC0300F5F3AF /* Supporting Files */,
			);
			path = PinyinKit;
			sourceTree = "<group>";
		};
		1D7CD03216E4DC0300F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD03316E4DC0300F5F3AF /* PinyinKit-Info.plist */,
				1D7CD03416E4DC0300F5F3AF /* InfoPlist.strings */,
				1D7CD03716E4DC0300F5F3AF /* PinyinKit-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD04816E4DC3600F5F3AF /* MobilePinyinKit */ = {
			isa = PBXGroup;
			children = (
				1D7CD04916E4DC3600F5F3AF /* Supporting Files */,
			);
			path = MobilePinyinKit;
			sourceTree = "<group>";
		};
		1D7CD04916E4DC3600F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD04A16E4DC3600F5F3AF /* MobilePinyinKit-Info.plist */,
				1D7CD04B16E4DC3600F5F3AF /* InfoPlist.strings */,
				1D7CD04E16E4DC3600F5F3AF /* MobilePinyinKit-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD06816E4DDE200F5F3AF /* OS X */ = {
			isa = PBXGroup;
			children = (
				1D7CD06F16E4DE3100F5F3AF /* AppKit.framework */,
				1D7CD07016E4DE3100F5F3AF /* CoreGraphics.framework */,
				1D7CD06616E4DDDD00F5F3AF /* Cocoa.framework */,
				1D7CD06916E4DDF900F5F3AF /* Foundation.framework */,
			);
			name = "OS X";
			sourceTree = "<group>";
		};
		1D7CD06D16E4DE1100F5F3AF /* iOS */ = {
			isa = PBXGroup;
			children = (
				1D7CD0F816E4E77D00F5F3AF /* CoreFoundation.framework */,
				1D7CD0F916E4E77D00F5F3AF /* Security.framework */,
				1D7CD07516E4DE5E00F5F3AF /* CoreGraphics.framework */,
				1D7CD07616E4DE5E00F5F3AF /* UIKit.framework */,
				1D7CD06B16E4DE0E00F5F3AF /* Foundation.framework */,
			);
			name = iOS;
			sourceTree = "<group>";
		};
		1D7CD08016E4E17000F5F3AF /* Desktop */ = {
			isa = PBXGroup;
			children = (
				1D7CCFD116E4C10D00F5F3AF /* WebFusion */,
				1D85892A16D7C5900056DB48 /* FusionKit */,
				1D7CD16016E535C100F5F3AF /* FusionBinding */,
				1D7CD03116E4DC0300F5F3AF /* PinyinKit */,
				1D7CD08E16E4E21000F5F3AF /* Base64Kit */,
			);
			name = Desktop;
			sourceTree = "<group>";
		};
		1D7CD08116E4E18400F5F3AF /* Mobile */ = {
			isa = PBXGroup;
			children = (
				1D7CD01516E4DBD900F5F3AF /* MobileWebFusion */,
				1D7CCFF716E4D24C00F5F3AF /* MobileFusionKit */,
				1D7CD04816E4DC3600F5F3AF /* MobilePinyinKit */,
				1D7CD0A616E4E21F00F5F3AF /* MobileBase64Kit */,
				1D7CD0CB16E4E67B00F5F3AF /* MobileTaskCounter */,
				1D7CD0DF16E4E69100F5F3AF /* MobileKeychainAccess */,
			);
			name = Mobile;
			sourceTree = "<group>";
		};
		1D7CD08E16E4E21000F5F3AF /* Base64Kit */ = {
			isa = PBXGroup;
			children = (
				1D7CD09516E4E21000F5F3AF /* Base64Kit.h */,
				1D7CD0B016E4E25F00F5F3AF /* NSBase64DataEncoder.h */,
				1D7CD0B116E4E25F00F5F3AF /* NSBase64DataEncoder.m */,
				1D7CD0B416E4E27400F5F3AF /* base64.h */,
				1D7CD0B516E4E27400F5F3AF /* base64.m */,
				1D7CD08F16E4E21000F5F3AF /* Supporting Files */,
			);
			path = Base64Kit;
			sourceTree = "<group>";
		};
		1D7CD08F16E4E21000F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD09016E4E21000F5F3AF /* Base64Kit-Info.plist */,
				1D7CD09116E4E21000F5F3AF /* InfoPlist.strings */,
				1D7CD09416E4E21000F5F3AF /* Base64Kit-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD0A616E4E21F00F5F3AF /* MobileBase64Kit */ = {
			isa = PBXGroup;
			children = (
				1D7CD0A716E4E21F00F5F3AF /* Supporting Files */,
			);
			path = MobileBase64Kit;
			sourceTree = "<group>";
		};
		1D7CD0A716E4E21F00F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD0A816E4E21F00F5F3AF /* MobileBase64Kit-Info.plist */,
				1D7CD0A916E4E21F00F5F3AF /* InfoPlist.strings */,
				1D7CD0AC16E4E21F00F5F3AF /* MobileBase64Kit-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD0CB16E4E67B00F5F3AF /* MobileTaskCounter */ = {
			isa = PBXGroup;
			children = (
				1D7CD0E916E4E6C100F5F3AF /* TaskCounter.h */,
				1D7CD0EA16E4E6C100F5F3AF /* TCTaskCounter.h */,
				1D7CD0EB16E4E6C100F5F3AF /* TCTaskCounter.m */,
				1D7CD0EC16E4E6C100F5F3AF /* TCTaskQueue.h */,
				1D7CD0ED16E4E6C100F5F3AF /* TCTaskQueue.m */,
				1D7CD0CC16E4E67C00F5F3AF /* Supporting Files */,
			);
			path = MobileTaskCounter;
			sourceTree = "<group>";
		};
		1D7CD0CC16E4E67C00F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD0CD16E4E67C00F5F3AF /* MobileTaskCounter-Info.plist */,
				1D7CD0CE16E4E67C00F5F3AF /* InfoPlist.strings */,
				1D7CD0D116E4E67C00F5F3AF /* MobileTaskCounter-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD0DF16E4E69100F5F3AF /* MobileKeychainAccess */ = {
			isa = PBXGroup;
			children = (
				1D7CD0FD16E4E7C500F5F3AF /* KeychainItemWrapper.h */,
				1D7CD0FE16E4E7C500F5F3AF /* KeychainItemWrapper.m */,
				1D7CD0E016E4E69100F5F3AF /* Supporting Files */,
			);
			path = MobileKeychainAccess;
			sourceTree = "<group>";
		};
		1D7CD0E016E4E69100F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD0E116E4E69100F5F3AF /* MobileKeychainAccess-Info.plist */,
				1D7CD0E216E4E69100F5F3AF /* InfoPlist.strings */,
				1D7CD0E516E4E69100F5F3AF /* MobileKeychainAccess-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D7CD15C16E535C100F5F3AF /* Other Frameworks */ = {
			isa = PBXGroup;
			children = (
				1D7CD15D16E535C100F5F3AF /* AppKit.framework */,
				1D7CD15E16E535C100F5F3AF /* CoreData.framework */,
				1D7CD15F16E535C100F5F3AF /* Foundation.framework */,
			);
			name = "Other Frameworks";
			sourceTree = "<group>";
		};
		1D7CD16016E535C100F5F3AF /* FusionBinding */ = {
			isa = PBXGroup;
			children = (
				1D7CD16716E535C200F5F3AF /* FusionBinding.h */,
				1D7CD16116E535C100F5F3AF /* Supporting Files */,
			);
			path = FusionBinding;
			sourceTree = "<group>";
		};
		1D7CD16116E535C100F5F3AF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D7CD16216E535C100F5F3AF /* FusionBinding-Info.plist */,
				1D7CD16316E535C100F5F3AF /* InfoPlist.strings */,
				1D7CD16616E535C100F5F3AF /* FusionBinding-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D85891516D7C5820056DB48 = {
			isa = PBXGroup;
			children = (
				1D7CD14116E52AF500F5F3AF /* COPYRIGHT.md */,
				1D7CD17716E53FA300F5F3AF /* README.md */,
				1D7CD08016E4E17000F5F3AF /* Desktop */,
				1D7CD08116E4E18400F5F3AF /* Mobile */,
				1D85892316D7C5900056DB48 /* Frameworks */,
				1D85892216D7C5900056DB48 /* Products */,
			);
			sourceTree = "<group>";
		};
		1D85892216D7C5900056DB48 /* Products */ = {
			isa = PBXGroup;
			children = (
				1D85892116D7C5900056DB48 /* FusionKit.framework */,
				1D7CCFCF16E4C10D00F5F3AF /* WebFusion.app */,
				1D7CCFF416E4D24C00F5F3AF /* MobileFusionKit.framework */,
				1D7CD00F16E4DBD900F5F3AF /* MobileWebFusion.app */,
				1D7CD02F16E4DC0300F5F3AF /* PinyinKit.framework */,
				1D7CD04616E4DC3600F5F3AF /* MobilePinyinKit.framework */,
				1D7CD08716E4E21000F5F3AF /* Base64Kit.framework */,
				1D7CD0A316E4E21F00F5F3AF /* MobileBase64Kit.framework */,
				1D7CD0C916E4E67B00F5F3AF /* MobileTaskCounter.framework */,
				1D7CD0DD16E4E69100F5F3AF /* MobileKeychainAccess.framework */,
				1D7CD15916E535C100F5F3AF /* FusionBinding.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		1D85892316D7C5900056DB48 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				1D7CD06D16E4DE1100F5F3AF /* iOS */,
				1D7CD06816E4DDE200F5F3AF /* OS X */,
				1D7CD15A16E535C100F5F3AF /* Cocoa.framework */,
				1D7CD15C16E535C100F5F3AF /* Other Frameworks */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		1D85892A16D7C5900056DB48 /* FusionKit */ = {
			isa = PBXGroup;
			children = (
				1D85893116D7C5900056DB48 /* FusionKit.h */,
				1D7CD00A16E4DB0D00F5F3AF /* FKDecls.h */,
				1D85893816D7C77C0056DB48 /* FKJSONKeyedArchiver.h */,
				1D85893916D7C77C0056DB48 /* FKJSONKeyedArchiver.m */,
				1D7CCFBF16E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.h */,
				1D7CCFC016E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.m */,
				1D7CCFC316E4BFDD00F5F3AF /* FKWrapper.h */,
				1D7CCFC416E4BFDD00F5F3AF /* FKWrapper.m */,
				1D7CCFC716E4C0CA00F5F3AF /* FKConnection.h */,
				1D7CCFC816E4C0CA00F5F3AF /* FKConnection.m */,
				1D7CD16D16E535E300F5F3AF /* FKNews.h */,
				1D7CD16E16E535E300F5F3AF /* FKNews.m */,
				1D7CD17416E53CD300F5F3AF /* FKContact.h */,
				1D7CD17516E53CD300F5F3AF /* FKContact.m */,
				1D7CD18116E54A7400F5F3AF /* FKMedia.h */,
				1D7CD18216E54A7500F5F3AF /* FKMedia.m */,
				1D85892B16D7C5900056DB48 /* Supporting Files */,
			);
			path = FusionKit;
			sourceTree = "<group>";
		};
		1D85892B16D7C5900056DB48 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D85892C16D7C5900056DB48 /* FusionKit-Info.plist */,
				1D85892D16D7C5900056DB48 /* InfoPlist.strings */,
				1D85893016D7C5900056DB48 /* FusionKit-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		1D7CCFEF16E4D24C00F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD00116E4D2A800F5F3AF /* FusionKit.h in Headers */,
				1D7CD00216E4D2A900F5F3AF /* FKJSONKeyedArchiver.h in Headers */,
				1D7CD00316E4D2A900F5F3AF /* FKJSONKeyedUnarchiver.h in Headers */,
				1D7CD00416E4D2A900F5F3AF /* FKWrapper.h in Headers */,
				1D7CD00516E4D2A900F5F3AF /* FKConnection.h in Headers */,
				1D7CD07F16E4DFA000F5F3AF /* FKDecls.h in Headers */,
				1D7CD17D16E5451300F5F3AF /* FKNews.h in Headers */,
				1D7CD17F16E5451300F5F3AF /* FKContact.h in Headers */,
				1D7CD18716E556CF00F5F3AF /* FKMedia.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD02C16E4DC0300F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD06216E4DD4400F5F3AF /* PinyinKit.h in Headers */,
				1D7CD05816E4DC7500F5F3AF /* NSString+Pinyin.h in Headers */,
				1D7CD05E16E4DCED00F5F3AF /* PYPinyin.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD04116E4DC3600F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD06316E4DDBC00F5F3AF /* PinyinKit.h in Headers */,
				1D7CD06416E4DDBC00F5F3AF /* PYPinyin.h in Headers */,
				1D7CD06516E4DDBC00F5F3AF /* NSString+Pinyin.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD08416E4E21000F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0B816E4E2BB00F5F3AF /* base64.h in Headers */,
				1D7CD0B916E4E2C200F5F3AF /* NSBase64DataEncoder.h in Headers */,
				1D7CD0BC16E4E2CE00F5F3AF /* Base64Kit.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD09E16E4E21F00F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0BA16E4E2C500F5F3AF /* NSBase64DataEncoder.h in Headers */,
				1D7CD0BB16E4E2C900F5F3AF /* base64.h in Headers */,
				1D7CD0BD16E4E2CF00F5F3AF /* Base64Kit.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0C416E4E67B00F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0EE16E4E6C100F5F3AF /* TaskCounter.h in Headers */,
				1D7CD0EF16E4E6C100F5F3AF /* TCTaskCounter.h in Headers */,
				1D7CD0F116E4E6C100F5F3AF /* TCTaskQueue.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0D816E4E69100F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0FF16E4E7C500F5F3AF /* KeychainItemWrapper.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD15616E535C100F5F3AF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD19016E563C800F5F3AF /* FusionBinding.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D85891E16D7C5900056DB48 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D85893716D7C5AC0056DB48 /* FusionKit.h in Headers */,
				1D85893A16D7C77C0056DB48 /* FKJSONKeyedArchiver.h in Headers */,
				1D7CCFC116E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.h in Headers */,
				1D7CCFC516E4BFDD00F5F3AF /* FKWrapper.h in Headers */,
				1D7CCFC916E4C0CB00F5F3AF /* FKConnection.h in Headers */,
				1D7CD07E16E4DFA000F5F3AF /* FKDecls.h in Headers */,
				1D7CD17916E5451200F5F3AF /* FKNews.h in Headers */,
				1D7CD17B16E5451200F5F3AF /* FKContact.h in Headers */,
				1D7CD18816E556D200F5F3AF /* FKMedia.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		1D7CCFCE16E4C10D00F5F3AF /* WebFusion */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CCFE316E4C10E00F5F3AF /* Build configuration list for PBXNativeTarget "WebFusion" */;
			buildPhases = (
				1D7CCFCB16E4C10D00F5F3AF /* Sources */,
				1D7CCFCC16E4C10D00F5F3AF /* Frameworks */,
				1D7CCFCD16E4C10D00F5F3AF /* Resources */,
				1D7CD10516E4ED9000F5F3AF /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = WebFusion;
			productName = WebFusion;
			productReference = 1D7CCFCF16E4C10D00F5F3AF /* WebFusion.app */;
			productType = "com.apple.product-type.application";
		};
		1D7CCFF316E4D24C00F5F3AF /* MobileFusionKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CCFFE16E4D24C00F5F3AF /* Build configuration list for PBXNativeTarget "MobileFusionKit" */;
			buildPhases = (
				1D7CCFEC16E4D24C00F5F3AF /* ShellScript */,
				1D7CCFED16E4D24C00F5F3AF /* Sources */,
				1D7CCFEE16E4D24C00F5F3AF /* Frameworks */,
				1D7CCFEF16E4D24C00F5F3AF /* Headers */,
				1D7CCFF016E4D24C00F5F3AF /* Resources */,
				1D7CCFF116E4D24C00F5F3AF /* ShellScript */,
				1D7CCFF216E4D24C00F5F3AF /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileFusionKit;
			productName = MobileFUsionKit;
			productReference = 1D7CCFF416E4D24C00F5F3AF /* MobileFusionKit.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		1D7CD00E16E4DBD900F5F3AF /* MobileWebFusion */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD02716E4DBD900F5F3AF /* Build configuration list for PBXNativeTarget "MobileWebFusion" */;
			buildPhases = (
				1D7CD00B16E4DBD900F5F3AF /* Sources */,
				1D7CD00C16E4DBD900F5F3AF /* Frameworks */,
				1D7CD00D16E4DBD900F5F3AF /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileWebFusion;
			productName = MobileWebFusion;
			productReference = 1D7CD00F16E4DBD900F5F3AF /* MobileWebFusion.app */;
			productType = "com.apple.product-type.application";
		};
		1D7CD02E16E4DC0300F5F3AF /* PinyinKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD03B16E4DC0300F5F3AF /* Build configuration list for PBXNativeTarget "PinyinKit" */;
			buildPhases = (
				1D7CD02A16E4DC0300F5F3AF /* Sources */,
				1D7CD02B16E4DC0300F5F3AF /* Frameworks */,
				1D7CD02C16E4DC0300F5F3AF /* Headers */,
				1D7CD02D16E4DC0300F5F3AF /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = PinyinKit;
			productName = PinyinKit;
			productReference = 1D7CD02F16E4DC0300F5F3AF /* PinyinKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		1D7CD04516E4DC3600F5F3AF /* MobilePinyinKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD04F16E4DC3600F5F3AF /* Build configuration list for PBXNativeTarget "MobilePinyinKit" */;
			buildPhases = (
				1D7CD03E16E4DC3600F5F3AF /* ShellScript */,
				1D7CD03F16E4DC3600F5F3AF /* Sources */,
				1D7CD04016E4DC3600F5F3AF /* Frameworks */,
				1D7CD04116E4DC3600F5F3AF /* Headers */,
				1D7CD04216E4DC3600F5F3AF /* Resources */,
				1D7CD04316E4DC3600F5F3AF /* ShellScript */,
				1D7CD04416E4DC3600F5F3AF /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobilePinyinKit;
			productName = MobilePinyinKit;
			productReference = 1D7CD04616E4DC3600F5F3AF /* MobilePinyinKit.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		1D7CD08616E4E21000F5F3AF /* Base64Kit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD09816E4E21000F5F3AF /* Build configuration list for PBXNativeTarget "Base64Kit" */;
			buildPhases = (
				1D7CD08216E4E21000F5F3AF /* Sources */,
				1D7CD08316E4E21000F5F3AF /* Frameworks */,
				1D7CD08416E4E21000F5F3AF /* Headers */,
				1D7CD08516E4E21000F5F3AF /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Base64Kit;
			productName = Base64Kit;
			productReference = 1D7CD08716E4E21000F5F3AF /* Base64Kit.framework */;
			productType = "com.apple.product-type.framework";
		};
		1D7CD0A216E4E21F00F5F3AF /* MobileBase64Kit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD0AD16E4E21F00F5F3AF /* Build configuration list for PBXNativeTarget "MobileBase64Kit" */;
			buildPhases = (
				1D7CD09B16E4E21F00F5F3AF /* ShellScript */,
				1D7CD09C16E4E21F00F5F3AF /* Sources */,
				1D7CD09D16E4E21F00F5F3AF /* Frameworks */,
				1D7CD09E16E4E21F00F5F3AF /* Headers */,
				1D7CD09F16E4E21F00F5F3AF /* Resources */,
				1D7CD0A016E4E21F00F5F3AF /* ShellScript */,
				1D7CD0A116E4E21F00F5F3AF /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileBase64Kit;
			productName = MobileBase64Kit;
			productReference = 1D7CD0A316E4E21F00F5F3AF /* MobileBase64Kit.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		1D7CD0C816E4E67B00F5F3AF /* MobileTaskCounter */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD0D216E4E67C00F5F3AF /* Build configuration list for PBXNativeTarget "MobileTaskCounter" */;
			buildPhases = (
				1D7CD0C116E4E67B00F5F3AF /* ShellScript */,
				1D7CD0C216E4E67B00F5F3AF /* Sources */,
				1D7CD0C316E4E67B00F5F3AF /* Frameworks */,
				1D7CD0C416E4E67B00F5F3AF /* Headers */,
				1D7CD0C516E4E67B00F5F3AF /* Resources */,
				1D7CD0C616E4E67B00F5F3AF /* ShellScript */,
				1D7CD0C716E4E67B00F5F3AF /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileTaskCounter;
			productName = MobileTaskCounter;
			productReference = 1D7CD0C916E4E67B00F5F3AF /* MobileTaskCounter.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		1D7CD0DC16E4E69100F5F3AF /* MobileKeychainAccess */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD0E616E4E69100F5F3AF /* Build configuration list for PBXNativeTarget "MobileKeychainAccess" */;
			buildPhases = (
				1D7CD0D516E4E69100F5F3AF /* ShellScript */,
				1D7CD0D616E4E69100F5F3AF /* Sources */,
				1D7CD0D716E4E69100F5F3AF /* Frameworks */,
				1D7CD0D816E4E69100F5F3AF /* Headers */,
				1D7CD0D916E4E69100F5F3AF /* Resources */,
				1D7CD0DA16E4E69100F5F3AF /* ShellScript */,
				1D7CD0DB16E4E69100F5F3AF /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileKeychainAccess;
			productName = MobileKeychainAccess;
			productReference = 1D7CD0DD16E4E69100F5F3AF /* MobileKeychainAccess.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		1D7CD15816E535C100F5F3AF /* FusionBinding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D7CD16A16E535C200F5F3AF /* Build configuration list for PBXNativeTarget "FusionBinding" */;
			buildPhases = (
				1D7CD15416E535C100F5F3AF /* Sources */,
				1D7CD15516E535C100F5F3AF /* Frameworks */,
				1D7CD15616E535C100F5F3AF /* Headers */,
				1D7CD15716E535C100F5F3AF /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = FusionBinding;
			productName = FusionBinding;
			productReference = 1D7CD15916E535C100F5F3AF /* FusionBinding.framework */;
			productType = "com.apple.product-type.framework";
		};
		1D85892016D7C5900056DB48 /* FusionKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D85893416D7C5900056DB48 /* Build configuration list for PBXNativeTarget "FusionKit" */;
			buildPhases = (
				1D85891C16D7C5900056DB48 /* Sources */,
				1D85891D16D7C5900056DB48 /* Frameworks */,
				1D85891E16D7C5900056DB48 /* Headers */,
				1D85891F16D7C5900056DB48 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = FusionKit;
			productName = FusionKit;
			productReference = 1D85892116D7C5900056DB48 /* FusionKit.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		1D85891616D7C5820056DB48 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0460;
			};
			buildConfigurationList = 1D85891916D7C5820056DB48 /* Build configuration list for PBXProject "FusionKit.C" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 1D85891516D7C5820056DB48;
			productRefGroup = 1D85892216D7C5900056DB48 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				1D7CCFCE16E4C10D00F5F3AF /* WebFusion */,
				1D85892016D7C5900056DB48 /* FusionKit */,
				1D7CD15816E535C100F5F3AF /* FusionBinding */,
				1D7CD02E16E4DC0300F5F3AF /* PinyinKit */,
				1D7CD08616E4E21000F5F3AF /* Base64Kit */,
				1D7CD00E16E4DBD900F5F3AF /* MobileWebFusion */,
				1D7CCFF316E4D24C00F5F3AF /* MobileFusionKit */,
				1D7CD04516E4DC3600F5F3AF /* MobilePinyinKit */,
				1D7CD0A216E4E21F00F5F3AF /* MobileBase64Kit */,
				1D7CD0C816E4E67B00F5F3AF /* MobileTaskCounter */,
				1D7CD0DC16E4E69100F5F3AF /* MobileKeychainAccess */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		1D7CCFCD16E4C10D00F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CCFD616E4C10E00F5F3AF /* InfoPlist.strings in Resources */,
				1D7CCFDC16E4C10E00F5F3AF /* Credits.rtf in Resources */,
				1D7CCFE216E4C10E00F5F3AF /* MainMenu.xib in Resources */,
				1D7CCFEA16E4C53800F5F3AF /* WFLoginWindowController.xib in Resources */,
				1D7CD11A16E50B3100F5F3AF /* WFMainWindowController.xib in Resources */,
				1D7CD13316E5247500F5F3AF /* Camera.png in Resources */,
				1D7CD13416E5247500F5F3AF /* Camera@2x.png in Resources */,
				1D7CD13516E5247500F5F3AF /* Contacts.png in Resources */,
				1D7CD13616E5247500F5F3AF /* Contacts@2x.png in Resources */,
				1D7CD13716E5247500F5F3AF /* Groove.png in Resources */,
				1D7CD13816E5247500F5F3AF /* Groove@2x.png in Resources */,
				1D7CD13916E5247500F5F3AF /* Me.png in Resources */,
				1D7CD13A16E5247500F5F3AF /* Me@2x.png in Resources */,
				1D7CD13B16E5247500F5F3AF /* News.png in Resources */,
				1D7CD13C16E5247500F5F3AF /* News@2x.png in Resources */,
				1D7CD13D16E5247500F5F3AF /* Places.png in Resources */,
				1D7CD13E16E5247500F5F3AF /* Places@2x.png in Resources */,
				1D7CD13F16E5247500F5F3AF /* Posts.png in Resources */,
				1D7CD14016E5247500F5F3AF /* Posts@2x.png in Resources */,
				1D7CD17816E53FA400F5F3AF /* README.md in Resources */,
				1D7CD18F16E55F7D00F5F3AF /* WFNewsViewController.xib in Resources */,
				1D2010C616E62DFC006A87B1 /* WFNewsItemViewController.xib in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CCFF016E4D24C00F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CCFFC16E4D24C00F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD00D16E4DBD900F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD01A16E4DBD900F5F3AF /* InfoPlist.strings in Resources */,
				1D7CD02216E4DBD900F5F3AF /* Default.png in Resources */,
				1D7CD02416E4DBD900F5F3AF /* Default@2x.png in Resources */,
				1D7CD02616E4DBD900F5F3AF /* Default-568h@2x.png in Resources */,
				1D2010C416E61211006A87B1 /* MainStoryboard.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD02D16E4DC0300F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD03616E4DC0300F5F3AF /* InfoPlist.strings in Resources */,
				1D7CD05B16E4DC9000F5F3AF /* dict.txt in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD04216E4DC3600F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD07C16E4DEBA00F5F3AF /* dict.txt in Resources */,
				1D7CD04D16E4DC3600F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD08516E4E21000F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD09316E4E21000F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD09F16E4E21F00F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0AB16E4E21F00F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0C516E4E67B00F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0D016E4E67C00F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0D916E4E69100F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0E416E4E69100F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD15716E535C100F5F3AF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD16516E535C100F5F3AF /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D85891F16D7C5900056DB48 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D85892F16D7C5900056DB48 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		1D7CCFEC16E4D24C00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1D7CCFF116E4D24C00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1D7CCFF216E4D24C00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
		1D7CD03E16E4DC3600F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1D7CD04316E4DC3600F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1D7CD04416E4DC3600F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
		1D7CD09B16E4E21F00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1D7CD0A016E4E21F00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1D7CD0A116E4E21F00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
		1D7CD0C116E4E67B00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1D7CD0C616E4E67B00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1D7CD0C716E4E67B00F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
		1D7CD0D516E4E69100F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1D7CD0DA16E4E69100F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1D7CD0DB16E4E69100F5F3AF /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		1D7CCFCB16E4C10D00F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CCFD816E4C10E00F5F3AF /* main.m in Sources */,
				1D7CCFDF16E4C10E00F5F3AF /* WFAppDelegate.m in Sources */,
				1D7CCFE816E4C49000F5F3AF /* WFLoginWindowController.m in Sources */,
				1D7CD11916E50B3100F5F3AF /* WFMainWindowController.m in Sources */,
				1D7CD12416E517CF00F5F3AF /* WFAppPaneController.m in Sources */,
				1D7CD18616E5564A00F5F3AF /* NSString+Geometrics.m in Sources */,
				1D7CD18E16E55F7D00F5F3AF /* WFNewsViewController.m in Sources */,
				1D7CD19616E5768900F5F3AF /* WFNewsItemViewController.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CCFED16E4D24C00F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD00616E4D2BD00F5F3AF /* FKJSONKeyedArchiver.m in Sources */,
				1D7CD00716E4D2BD00F5F3AF /* FKJSONKeyedUnarchiver.m in Sources */,
				1D7CD00816E4D2BD00F5F3AF /* FKWrapper.m in Sources */,
				1D7CD00916E4D2BD00F5F3AF /* FKConnection.m in Sources */,
				1D7CD17E16E5451300F5F3AF /* FKNews.m in Sources */,
				1D7CD18016E5451300F5F3AF /* FKContact.m in Sources */,
				1D7CD18A16E556DB00F5F3AF /* FKMedia.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD00B16E4DBD900F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD01C16E4DBD900F5F3AF /* main.m in Sources */,
				1D7CD02016E4DBD900F5F3AF /* WFAppDelegate.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD02A16E4DC0300F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD05916E4DC7500F5F3AF /* NSString+Pinyin.m in Sources */,
				1D7CD05F16E4DCED00F5F3AF /* PYPinyin.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD03F16E4DC3600F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD06016E4DD3500F5F3AF /* PYPinyin.m in Sources */,
				1D7CD06116E4DD3500F5F3AF /* NSString+Pinyin.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD08216E4E21000F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD10116E4EBAA00F5F3AF /* NSBase64DataEncoder.m in Sources */,
				1D7CD10316E4EBAE00F5F3AF /* base64.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD09C16E4E21F00F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD10216E4EBAA00F5F3AF /* NSBase64DataEncoder.m in Sources */,
				1D7CD10416E4EBAF00F5F3AF /* base64.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0C216E4E67B00F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD0F016E4E6C100F5F3AF /* TCTaskCounter.m in Sources */,
				1D7CD0F216E4E6C100F5F3AF /* TCTaskQueue.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD0D616E4E69100F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D7CD10016E4E7C500F5F3AF /* KeychainItemWrapper.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D7CD15416E535C100F5F3AF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D85891C16D7C5900056DB48 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D85893B16D7C77C0056DB48 /* FKJSONKeyedArchiver.m in Sources */,
				1D7CCFC216E4B81C00F5F3AF /* FKJSONKeyedUnarchiver.m in Sources */,
				1D7CCFC616E4BFDD00F5F3AF /* FKWrapper.m in Sources */,
				1D7CCFCA16E4C0CB00F5F3AF /* FKConnection.m in Sources */,
				1D7CD17A16E5451200F5F3AF /* FKNews.m in Sources */,
				1D7CD17C16E5451200F5F3AF /* FKContact.m in Sources */,
				1D7CD18916E556D900F5F3AF /* FKMedia.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		1D7CCFD416E4C10E00F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CCFD516E4C10E00F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CCFDA16E4C10E00F5F3AF /* Credits.rtf */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CCFDB16E4C10E00F5F3AF /* en */,
			);
			name = Credits.rtf;
			sourceTree = "<group>";
		};
		1D7CCFE016E4C10E00F5F3AF /* MainMenu.xib */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CCFE116E4C10E00F5F3AF /* en */,
			);
			name = MainMenu.xib;
			sourceTree = "<group>";
		};
		1D7CCFFA16E4D24C00F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CCFFB16E4D24C00F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD01816E4DBD900F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD01916E4DBD900F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD03416E4DC0300F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD03516E4DC0300F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD04B16E4DC3600F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD04C16E4DC3600F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD09116E4E21000F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD09216E4E21000F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD0A916E4E21F00F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD0AA16E4E21F00F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD0CE16E4E67C00F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD0CF16E4E67C00F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD0E216E4E69100F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD0E316E4E69100F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D7CD16316E535C100F5F3AF /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D7CD16416E535C100F5F3AF /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D85892D16D7C5900056DB48 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D85892E16D7C5900056DB48 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		1D7CCFE416E4C10E00F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "WebFusion/WebFusion-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "WebFusion/WebFusion-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = app;
			};
			name = Debug;
		};
		1D7CCFE516E4C10E00F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "WebFusion/WebFusion-Prefix.pch";
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "WebFusion/WebFusion-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = app;
			};
			name = Release;
		};
		1D7CCFFF16E4D24C00F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileFUsionKit/MobileFUsionKit-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileFUsionKit/MobileFUsionKit-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD00016E4D24C00F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileFUsionKit/MobileFUsionKit-Prefix.pch";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileFUsionKit/MobileFUsionKit-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD02816E4DBD900F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"\"$(SYSTEM_APPS_DIR)/Xcode.app/Contents/Developer/Library/Frameworks\"",
				);
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileWebFusion/MobileWebFusion-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileWebFusion/MobileWebFusion-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				WRAPPER_EXTENSION = app;
			};
			name = Debug;
		};
		1D7CD02916E4DBD900F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"\"$(SYSTEM_APPS_DIR)/Xcode.app/Contents/Developer/Library/Frameworks\"",
				);
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileWebFusion/MobileWebFusion-Prefix.pch";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileWebFusion/MobileWebFusion-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				OTHER_CFLAGS = "-DNS_BLOCK_ASSERTIONS=1";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = app;
			};
			name = Release;
		};
		1D7CD03C16E4DC0300F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "PinyinKit/PinyinKit-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "PinyinKit/PinyinKit-Info.plist";
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD03D16E4DC0300F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "PinyinKit/PinyinKit-Prefix.pch";
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "PinyinKit/PinyinKit-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD05016E4DC3600F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobilePinyinKit/MobilePinyinKit-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobilePinyinKit/MobilePinyinKit-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD05116E4DC3600F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobilePinyinKit/MobilePinyinKit-Prefix.pch";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobilePinyinKit/MobilePinyinKit-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD09916E4E21000F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "Base64Kit/Base64Kit-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "Base64Kit/Base64Kit-Info.plist";
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD09A16E4E21000F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "Base64Kit/Base64Kit-Prefix.pch";
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "Base64Kit/Base64Kit-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD0AE16E4E21F00F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileBase64Kit/MobileBase64Kit-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileBase64Kit/MobileBase64Kit-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD0AF16E4E21F00F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileBase64Kit/MobileBase64Kit-Prefix.pch";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileBase64Kit/MobileBase64Kit-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD0D316E4E67C00F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileTaskCounter/MobileTaskCounter-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileTaskCounter/MobileTaskCounter-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD0D416E4E67C00F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileTaskCounter/MobileTaskCounter-Prefix.pch";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileTaskCounter/MobileTaskCounter-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD0E716E4E69100F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = NO;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileKeychainAccess/MobileKeychainAccess-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileKeychainAccess/MobileKeychainAccess-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD0E816E4E69100F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = NO;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MobileKeychainAccess/MobileKeychainAccess-Prefix.pch";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "MobileKeychainAccess/MobileKeychainAccess-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D7CD16B16E535C200F5F3AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "FusionBinding/FusionBinding-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "FusionBinding/FusionBinding-Info.plist";
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D7CD16C16E535C200F5F3AF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "FusionBinding/FusionBinding-Prefix.pch";
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "FusionBinding/FusionBinding-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D85891A16D7C5820056DB48 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 6.0;
				MACOSX_DEPLOYMENT_TARGET = 10.8;
			};
			name = Debug;
		};
		1D85891B16D7C5820056DB48 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 6.0;
				MACOSX_DEPLOYMENT_TARGET = 10.8;
			};
			name = Release;
		};
		1D85893516D7C5900056DB48 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = C;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "FusionKit/FusionKit-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "FusionKit/FusionKit-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D85893616D7C5900056DB48 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = C;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "FusionKit/FusionKit-Prefix.pch";
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "FusionKit/FusionKit-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		1D7CCFE316E4C10E00F5F3AF /* Build configuration list for PBXNativeTarget "WebFusion" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CCFE416E4C10E00F5F3AF /* Debug */,
				1D7CCFE516E4C10E00F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CCFFE16E4D24C00F5F3AF /* Build configuration list for PBXNativeTarget "MobileFusionKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CCFFF16E4D24C00F5F3AF /* Debug */,
				1D7CD00016E4D24C00F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD02716E4DBD900F5F3AF /* Build configuration list for PBXNativeTarget "MobileWebFusion" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD02816E4DBD900F5F3AF /* Debug */,
				1D7CD02916E4DBD900F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD03B16E4DC0300F5F3AF /* Build configuration list for PBXNativeTarget "PinyinKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD03C16E4DC0300F5F3AF /* Debug */,
				1D7CD03D16E4DC0300F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD04F16E4DC3600F5F3AF /* Build configuration list for PBXNativeTarget "MobilePinyinKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD05016E4DC3600F5F3AF /* Debug */,
				1D7CD05116E4DC3600F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD09816E4E21000F5F3AF /* Build configuration list for PBXNativeTarget "Base64Kit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD09916E4E21000F5F3AF /* Debug */,
				1D7CD09A16E4E21000F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD0AD16E4E21F00F5F3AF /* Build configuration list for PBXNativeTarget "MobileBase64Kit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD0AE16E4E21F00F5F3AF /* Debug */,
				1D7CD0AF16E4E21F00F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD0D216E4E67C00F5F3AF /* Build configuration list for PBXNativeTarget "MobileTaskCounter" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD0D316E4E67C00F5F3AF /* Debug */,
				1D7CD0D416E4E67C00F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD0E616E4E69100F5F3AF /* Build configuration list for PBXNativeTarget "MobileKeychainAccess" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD0E716E4E69100F5F3AF /* Debug */,
				1D7CD0E816E4E69100F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D7CD16A16E535C200F5F3AF /* Build configuration list for PBXNativeTarget "FusionBinding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D7CD16B16E535C200F5F3AF /* Debug */,
				1D7CD16C16E535C200F5F3AF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D85891916D7C5820056DB48 /* Build configuration list for PBXProject "FusionKit.C" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D85891A16D7C5820056DB48 /* Debug */,
				1D85891B16D7C5820056DB48 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D85893416D7C5900056DB48 /* Build configuration list for PBXNativeTarget "FusionKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D85893516D7C5900056DB48 /* Debug */,
				1D85893616D7C5900056DB48 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1D85891616D7C5820056DB48 /* Project object */;
}
